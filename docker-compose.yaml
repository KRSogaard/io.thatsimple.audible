version: '3'
services:
  audible-ui:
    build:
      context: ./ui
      dockerfile: Dockerfile.dev
    ports:
      - 3000:3000
    volumes:
      - ./ui/src:/usr/app/src
      - ./ui/public:/usr/app/public
    depends_on:
      - audible-api
    environment:
      - REST_API_URL=http://audible-api:3080
    stdin_open: true
    tty: true

  audible-api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    command: npm run dev
    volumes:
      - ./api:/usr/app/
      - /usr/app/node_modules
    ports:
      - 3080:3080
    depends_on:
      - mysql-db
    environment:
      DB_HOST: mysql-db
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: 12345
      DB_NAME: audible
      MINIO_END_POINT: minio
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: myuser
      RABBITMQ_PASS: mypassword

  mysql-db:
    image: mysql:latest
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=audible
      - MYSQL_ROOT_PASSWORD=12345
    ports:
      - '3306:3306'
    volumes:
      - db:/var/lib/mysql
      - ./api/config/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql

  minio:
    image: minio/minio
    volumes:
      - ./minio/data:/data
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server --console-address ":9001" /data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      # AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=myuser
      - RABBITMQ_DEFAULT_PASS=mypassword
    volumes:
      - ./rabbitmq/data/:/var/lib/rabbitmq/
      - ./rabbitmq/log/:/var/log/rabbitmq

# networks:
#   mean-stack-net:
#     driver: bridge

volumes:
  db:
    driver: local
  minio_storage: {}
